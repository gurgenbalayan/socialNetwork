version: '3'

services:
  master:
    container_name: "citus_master"
    image: "citusdata/citus"
    ports:
      - 5432:5432
    labels: ["com.citusdata.role=Master"]
    environment: &AUTH
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - pgnet
  worker:
    image: "citusdata/citus"
    labels: ["com.citusdata.role=Worker"]
    depends_on: [manager]
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck
    networks:
      - pgnet
  manager:
    container_name: "citus_manager"
    image: "citusdata/membership-manager"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - healthcheck-volume:/healthcheck
    depends_on: [master]
    environment: *AUTH
    networks:
      - pgnet
  pgmaster:
    image: postgres:15
    restart: always
    ports:
      - 15432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/pgmaster/:/var/lib/postgresql/data

  pgslave:
    image: postgres:15
    restart: always
    ports:
      - 25432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/pgslave/:/var/lib/postgresql/data
  pgasyncslave:
    image: postgres:15
    restart: always
    ports:
      - 35432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/pgasyncslave/:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=otus
    ports:
      - "5672:5672"
      - "15672:15672"
#
#
#  tarantool:
#    image: tarantool/tarantool:2
#    restart: always
#    ports:
#      - "3301:3301"

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

#  memcached:
#    image: memcached
#    restart: always
#    ports:
#      - "11211:11211"
volumes:
  healthcheck-volume:
networks:
    pgnet:
        external: true
