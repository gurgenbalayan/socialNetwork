version: '3'

services:
  pgmaster:
    image: postgres:15
    container_name: pgmaster
    restart: always
    ports:
      - 15432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/pgmaster/:/var/lib/postgresql/data
  pgslave:
    image: postgres:15
    container_name: pgslave
    restart: always
    ports:
      - 25432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/pgslave/:/var/lib/postgresql/data
  pgasyncslave:
    image: postgres:15
    container_name: pgasyncslave
    restart: always
    ports:
      - 35432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/pgasyncslave/:/var/lib/postgresql/data
  haproxy:
    image: haproxy:2.4
    container_name: haproxy-lb
    restart: "no"
    networks:
      - pgnet
    volumes:
      - "./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
    ports:
      - "5432:5432"
      - "8404:8404"
  nginx:
    image: nginx:1.21
    container_name: nginx-lb
    restart: on-failure
    networks:
      - pgnet
    volumes:
      - "./default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "4088:80"
      - "4098:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=otus
    ports:
      - "5672:5672"
      - "15672:15672"
#
#
#  tarantool:
#    image: tarantool/tarantool:2
#    restart: always
#    ports:
#      - "3301:3301"

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
  tarantool:
    container_name: tarantool
    image: tarantool/tarantool:latest
    restart: always
    ports:
      - "3301:3301"

#  memcached:
#    image: memcached
#    restart: always
#    ports:
#      - "11211:11211"
volumes:
  healthcheck-volume:
networks:
    pgnet:
        external: true

