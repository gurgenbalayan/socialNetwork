version: '3'

services:
  zabbix-agent:
    image: zabbix/zabbix-agent2
    environment:
      ZBX_HOSTNAME: Zabbix server
      ZBX_SERVER_HOST: zabbix-server
    networks:
      - pgnet
    restart: unless-stopped
    depends_on:
      - zabbix-postgres
      - zabbix-server
    extra_hosts:
      - "host.docker.internal:host-gateway"
  zabbix-postgres:
    image: postgres:15
    container_name: zabbix-postgres
    hostname: zabbix-postgres
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/postgres:/var/lib/postgresql/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
  zabbix-server:
    image: zabbix/zabbix-server-pgsql
    container_name: zabbix-server
    hostname: zabbix-server
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
      DB_SERVER_HOST: zabbix-postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    depends_on:
      - zabbix-postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"
  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql
    container_name: zabbix-web
    hostname: zabbix-web
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
      DB_SERVER_HOST: zabbix-postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      ZBX_SERVER_HOST: zabbix-server
      PHP_TZ: "Europe/Moscow"
    ports:
      - 8080:8080
      - 8443:8443
    networks:
      - pgnet
    depends_on:
      - zabbix-postgres
      - zabbix-server
    extra_hosts:
      - "host.docker.internal:host-gateway"
  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - pgnet
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - pgnet
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - pgnet
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    extra_hosts:
      - "host.docker.internal:host-gateway"
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8081:8081
    networks:
      - pgnet
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - pgnet
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
  pgmaster:
    image: postgres:15
    container_name: pgmaster
    restart: always
    ports:
      - 15432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/pgmaster/:/var/lib/postgresql/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
  pgslave:
    image: postgres:15
    container_name: pgslave
    restart: always
    ports:
      - 25432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/pgslave/:/var/lib/postgresql/data
  pgasyncslave:
    image: postgres:15
    container_name: pgasyncslave
    restart: always
    ports:
      - 35432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - pgnet
    volumes:
      - $PWD/volumes/pgasyncslave/:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=otus
    ports:
      - "5672:5672"
      - "15672:15672"
#
#
#  tarantool:
#    image: tarantool/tarantool:2
#    restart: always
#    ports:
#      - "3301:3301"

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
  tarantool:
    container_name: tarantool
    image: tarantool/tarantool:latest
    restart: always
    ports:
      - "3301:3301"

#  memcached:
#    image: memcached
#    restart: always
#    ports:
#      - "11211:11211"
volumes:
  healthcheck-volume:
  prometheus_data: {}
  grafana_data: {}
  zabbix-postgres: {}
  zabbix-postgres-backup: {}
  zabbix-database-backups: {}
networks:
    pgnet:
        external: true

